library(textclean)
library(stringr)
library(quanteda)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando tm
corpus <- Corpus(VectorSource(texto))
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- removePunctuation(texto) # Eliminar puntuación
texto <- removeNumbers(texto) # Eliminar números
texto <- stripWhitespace(texto) # Eliminar espacios en blanco extra
texto <- removeWords(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- str_replace_all(texto, "http\\S+|www\\S+", "") # Eliminar URLs
return(texto)
}
# Aplicar la función de limpieza al corpus
corpus <- tm_map(corpus, content_transformer(limpiar_texto))
# Ver el texto limpio
inspect(corpus)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando tm
corpus <- Corpus(VectorSource(texto))
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- removePunctuation(texto) # Eliminar puntuación
texto <- removeNumbers(texto) # Eliminar números
texto <- stripWhitespace(texto) # Eliminar espacios en blanco extra
texto <- removeWords(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- str_replace_all(texto, "http\\S+|www\\S+", "") # Eliminar URLs
return(texto)
}
limpiar_texto
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_remove(texto, pattern = "http\\S+|www\\S+") # Eliminar URLs
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
library(quanteda)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visítame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Crear una función de limpieza de texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, pattern = stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_remove(texto, pattern = "http\\S+|www\\S+") # Eliminar URLs
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- tokens_limpios %>%
tokens_wordstem(language = "spanish") %>% # Stemming de palabras
dfm() %>%
convert(to = "data.frame")
# Mostrar el texto limpio
print(texto_limpio)
tokens_limpios %>%
tokens_wordstem(language = "spanish")
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_remove(texto, pattern = "http\\S+|www\\S+") # Eliminar URLs
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
library(tidyr)
library(highcharter)
crear_grafico <- function(datos, tooltip) {
highchart() |>
hc_chart(type = "bar") |>
hc_title(text = "Gráfico de Barras Horizontal") |>
hc_yAxis_multiples(
list(
title = list(text = "Valor 1")
),
list(
title = list(text = "Valor 2"),
opposite = TRUE
)
)|>
hc_xAxis(categories = datos$categoria) |>
hc_add_series(name = "Valor 1", data = datos$valor1, yAxis = 0) |>
hc_add_series(name = "Valor 2", data = datos$valor2, yAxis = 1) |>
hc_tooltip(formatter = JS(sprintf("function() { return %s; }", tooltip)),
shared = FALSE,
useHTML = TRUE)
}
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 30, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens_remove(texto, pattern = "http\\S+|www\\S+") # Eliminar URLs
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
library(quantmod)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens_remove(texto, pattern = "http\\S+|www\\S+") # Eliminar URLs
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_remove(texto, pattern = "http\\S+|www\\S+") # Eliminar URLs
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
crear_grafico <- function(datos, tooltip) {
highchart() |>
hc_chart(type = "bar") |>
hc_title(text = "Gráfico de Barras Horizontal") |>
hc_yAxis_multiples(
list(
title = list(text = "Valor 1"),
opposite = TRUE
),
list(
title = list(text = "Valor 2")
)
)|>
hc_xAxis(categories = datos$categoria) |>
hc_add_series(name = "Valor 1", data = datos$valor1, yAxis = 0) |>
hc_add_series(name = "Valor 2", data = datos$valor2, yAxis = 1) |>
hc_tooltip(formatter = JS(sprintf("function() { return %s; }", tooltip)),
shared = FALSE,
useHTML = TRUE)
}
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 30, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
crear_grafico <- function(datos, tooltip) {
highchart() |>
hc_chart(type = "bar") |>
hc_title(text = "Gráfico de Barras Horizontal") |>
hc_yAxis_multiples(
list(
title = list(text = "Valor 1"),
opposite = TRUE
),
list(
title = list(text = "Valor 2")
)
)|>
hc_xAxis(categories = datos$categoria) |>
hc_add_series(name = "Valor 1", data = datos$valor1, yAxis = 0) |>
hc_add_series(name = "Valor 2", data = datos$valor2, yAxis = 1) |>
hc_tooltip(formatter = JS(sprintf("function() { return %s; }", tooltip)),
shared = FALSE,
useHTML = TRUE)
}
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 30, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
library(highcharter)
library(tidyr)
crear_grafico <- function(datos, tooltip) {
highchart() |>
hc_chart(type = "bar") |>
hc_title(text = "Gráfico de Barras Horizontal") |>
hc_yAxis_multiples(
list(
title = list(text = "Valor 1"),
opposite = TRUE
),
list(
title = list(text = "Valor 2")
)
)|>
hc_xAxis(categories = datos$categoria) |>
hc_add_series(name = "Valor 1", data = datos$valor1, yAxis = 0) |>
hc_add_series(name = "Valor 2", data = datos$valor2, yAxis = 1) |>
hc_tooltip(formatter = JS(sprintf("function() { return %s; }", tooltip)),
shared = FALSE,
useHTML = TRUE)
}
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 30, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
library(highcharter)
library(tidyr)
crear_grafico <- function(datos, tooltip) {
highchart() |>
hc_chart(type = "bar") |>
hc_title(text = "Gráfico de Barras Horizontal") |>
hc_yAxis_multiples(
list(
title = list(text = "Valor 1"),
opposite = TRUE
),
list(
title = list(text = "Valor 2")
)
)|>
hc_xAxis(categories = datos$categoria) |>
hc_add_series(name = "Valor 1", data = datos$valor1, yAxis = 0) |>
hc_add_series(name = "Valor 2", data = datos$valor2, yAxis = 1) |>
hc_tooltip(formatter = JS(sprintf("function() { return %s; }", tooltip)),
shared = FALSE,
useHTML = TRUE)
}
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 30, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 70, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
datos <- data.frame(
categoria = c("A", "B", "C", "D"),
valor1 = c(10, 20, 30, 40),
valor2 = c(15, 25, 35, 45)
)
tooltip_text <- "'Categoría: ' + this.point.category + '<br>Valor : ' + this.point.y "
crear_grafico(datos, tooltip_text)
library(quanteda)
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
tokens_remove(texto, c(stopwords("es")))
tokens_remove(texto, c(stopwords("spanish")))
tokens_remove(texto, stopwords("spanish"))
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
tokens_remove(texto, stopwords("spanish"))
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto
# Ejemplo de texto en español
texto <- c("¡Hola! ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
tokens_remove(texto, stopwords("spanish"))
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
# Ejemplo de texto en español
texto <- c("¡Hola! hola ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!")
tokens_remove(texto, stopwords("spanish"))
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
# Ejemplo de texto en español
texto <- data.frame(text =
c("¡Hola! hola ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!",
"chaooo, a todos")
)
tokens_remove(texto, stopwords("spanish"))
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto)
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto$text)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
# Ejemplo de texto en español
texto <- data.frame(text =
c("¡Hola! hola ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!",
"chaooo, a todos los habitantes de la tierra")
)
tokens_remove(texto, stopwords("spanish"))
# Crear un corpus usando quanteda
corpus <- corpus(texto)
# Función para limpiar texto
limpiar_texto <- function(texto) {
texto <- tolower(texto) # Convertir a minúsculas
texto <- tokens(texto, remove_punct = TRUE) # Eliminar puntuación
texto <- tokens_remove(texto, stopwords("spanish")) # Eliminar palabras vacías (stopwords) en español
texto <- tokens_tolower(texto) # Convertir a minúsculas
return(texto)
}
# Aplicar la función de limpieza al corpus
tokens_limpios <- limpiar_texto(texto$text)
# Convertir los tokens a texto limpio
texto_limpio <- as.character(tokens_limpios)
print(texto_limpio)
devtools::load_all(".")
# Ejemplo de texto en español
texto <- data.frame(text =
c("¡Hola! hola ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!",
"chaooo, a todos los habitantes de la tierra")
)
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
?hcaes
devtools::load_all(".")
?hcaes
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
data_viz$..colors <- "red"
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
aggregate_data
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
aggregate_data
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", tooltip_template = "hola")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text", title="hola")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all(".")
# Ejemplo de texto en español
texto <- data.frame(text =
c("¡Hola! hola ¿Cómo estás? Este es un ejemplo de texto en español. Visitame en www.ejemplo.com. Gracias!!!",
"chaooo, a todos los habitantes de la tierra")
)
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
usethis::use_test("hg-word-cloud")
texto <- data.frame(text =
c("¡Hola! hola ¿Cómo están? este es un mensaje de saludo desde la galaxia andromeda. un test de comunicación!!!",
"respondan, chaooo, a todos los habitantes de la tierra")
)
hg_word_cloud(texto, var_cat = "text")
devtools::load_all(".")
hg_word_cloud(texto, var_cat = "text")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::install()
texto <- data.frame(text =
c("¡Hola! hola ¿Cómo están? este es un mensaje de saludo desde la galaxia andromeda. un test de comunicación!!!",
"respondan, chaooo, a todos los habitantes de la tierra")
)
hg_word_cloud(texto, var_cat = "text")
